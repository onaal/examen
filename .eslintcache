[{"/home/onaal/pruebas/src/index.js":"1","/home/onaal/pruebas/src/App.js":"2","/home/onaal/pruebas/src/reportWebVitals.js":"3","/home/onaal/pruebas/src/client/components/navbar.js":"4","/home/onaal/pruebas/src/server/util/RequestApi.js":"5"},{"size":566,"mtime":1611234099500,"results":"6","hashOfConfig":"7"},{"size":213,"mtime":1611149791627,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1611148109987,"results":"9","hashOfConfig":"7"},{"size":6532,"mtime":1611265822900,"results":"10","hashOfConfig":"7"},{"size":830,"mtime":1611265887183,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"6lp8r2",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"24"},"/home/onaal/pruebas/src/index.js",[],["25","26"],"/home/onaal/pruebas/src/App.js",["27"],"import logo from './logo.svg';\nimport './styles/tailwind.css';\nimport Navbar from './client/components/navbar'\n\nfunction App() {\n  return (\n    <div>\n      <Navbar></Navbar>\n    </div>\n  );\n}\n\nexport default App;\n","/home/onaal/pruebas/src/reportWebVitals.js",[],"/home/onaal/pruebas/src/client/components/navbar.js",["28","29","30","31","32","33","34","35","36"],"/home/onaal/pruebas/src/server/util/RequestApi.js",["37"],"'use strict';\n\nconst ApiRequest = {};\n\nApiRequest.get = (url ='', onSucess = (data) => {}, contentype) => {\n    return ApiRequest.CoreRequest({\n        method : 'GET',\n        url : url,\n        success : onSucess,\n        contentType:contentype,\n    })\n}\n\n\nApiRequest.CoreRequest = config =>{\n    try{\n        fetch(config.url, {\n            headers: new Headers({\n                'Authorization': 'Bearer ',\n                'Content-Type': config.contentType,\n                body: JSON.stringify(config.datas || null)\n            }),\n            method: config.method,\n        }).then( res =>res.json())\n        .then( json => {\n            return config.success(json)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    } catch(e) {\n        console.log(e);\n    }\n};\n\nmodule.exports = ApiRequest;",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":12},{"ruleId":"42","severity":1,"message":"46","line":1,"column":27,"nodeType":"44","messageId":"45","endLine":1,"endColumn":35},{"ruleId":"47","severity":1,"message":"48","line":73,"column":49,"nodeType":"49","endLine":73,"endColumn":163},{"ruleId":"47","severity":1,"message":"48","line":74,"column":49,"nodeType":"49","endLine":74,"endColumn":163},{"ruleId":"47","severity":1,"message":"48","line":75,"column":49,"nodeType":"49","endLine":75,"endColumn":163},{"ruleId":"47","severity":1,"message":"48","line":76,"column":49,"nodeType":"49","endLine":76,"endColumn":163},{"ruleId":"47","severity":1,"message":"48","line":89,"column":49,"nodeType":"49","endLine":89,"endColumn":163},{"ruleId":"47","severity":1,"message":"48","line":90,"column":49,"nodeType":"49","endLine":90,"endColumn":163},{"ruleId":"47","severity":1,"message":"48","line":91,"column":49,"nodeType":"49","endLine":91,"endColumn":163},{"ruleId":"47","severity":1,"message":"48","line":92,"column":49,"nodeType":"49","endLine":92,"endColumn":163},{"ruleId":"50","severity":1,"message":"51","line":1,"column":1,"nodeType":"52","messageId":"53","endLine":1,"endColumn":14,"fix":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"57","text":"58"},"no-global-assign","no-unsafe-negation",[0,13],""]